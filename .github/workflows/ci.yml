name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - run: npm ci
      - run: npm run lint

  test:
    name: Test (node-${{ matrix.node-version }})
    needs:
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 13.x]

    services:
      mariadb:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: directus
          MYSQL_DATABASE: directus
          MYSQL_USER: directus
          MYSQL_PASSWORD: directus
        ports:
          - 13306:3306
        volumes:
          - ./tests-data/db:/docker-entrypoint-initdb.d
        options: >-
          --health-cmd "mysql --silent --host=localhost --user=directus --password=directus --execute='select 1;'"
          --health-interval 15s
          --health-timeout 10s
          --health-retries 10

      directus:
        image: directus/directus:v8-apache
        env:
          DIRECTUS_APP_ENV: 'development'
          DIRECTUS_APP_TIMEZONE: 'UTC'
          DIRECTUS_AUTH_PUBLICKEY: '5a9605e6329f83c6c686c78f506b853f'
          DIRECTUS_AUTH_SECRETKEY: '797d10c4aafe563e8fe073fc151b5c29'
          DIRECTUS_DATABASE_HOST: 'mariadb'
          DIRECTUS_DATABASE_PORT: '3306'
          DIRECTUS_DATABASE_NAME: 'directus'
          DIRECTUS_DATABASE_USERNAME: 'directus'
          DIRECTUS_DATABASE_PASSWORD: 'directus'
        ports:
          - 8080:80
        volumes:
          - ./tests-data/uploads:/var/directus/public/uploads

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci
      - run: npm run build
      - run: npm test

  publish:
    name: Publish
    if: startsWith(github.ref, 'refs/tags') # Only publish on tags
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: https://registry.npmjs.org/
          scope: '@directus'

      - run: npm ci
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
